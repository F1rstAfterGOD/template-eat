// –î–∞–Ω–Ω—ã–µ –º–µ–Ω—é
const menuData = {
  'business-lunch': [
    { name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á', price: '450‚ÇΩ', description: '–°—É–ø –¥–Ω—è + –æ—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ + —Å–∞–ª–∞—Ç + –Ω–∞–ø–∏—Ç–æ–∫', image: 'üçΩÔ∏è' },
    { name: '–ü—Ä–µ–º–∏—É–º –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á', price: '650‚ÇΩ', description: '–ö—Ä–µ–º-—Å—É–ø + —Å—Ç–µ–π–∫ + –æ–≤–æ—â–∏ –≥—Ä–∏–ª—å + –¥–µ—Å–µ—Ä—Ç', image: 'ü•©' },
    { name: '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–π –ª–∞–Ω—á', price: '390‚ÇΩ', description: '–û–≤–æ—â–Ω–æ–π —Å—É–ø + –ø–∞—Å—Ç–∞ + —Å–∞–ª–∞—Ç + —Å–æ–∫', image: 'ü•ó' }
  ],
  'appetizers': [
    { name: '–ë—Ä—É—Å–∫–µ—Ç—Ç–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏', price: '280‚ÇΩ', description: '–•—Ä—É—Å—Ç—è—â–∏–π —Ö–ª–µ–± —Å —Ç–æ–º–∞—Ç–∞–º–∏ –∏ –±–∞–∑–∏–ª–∏–∫–æ–º', image: 'üçû' },
    { name: '–°—ã—Ä–Ω–∞—è —Ç–∞—Ä–µ–ª–∫–∞', price: '520‚ÇΩ', description: '–ê—Å—Å–æ—Ä—Ç–∏ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö —Å—ã—Ä–æ–≤ —Å –º–µ–¥–æ–º', image: 'üßÄ' },
    { name: '–ö—Ä–µ–≤–µ—Ç–∫–∏ —Ç–µ–º–ø—É—Ä–∞', price: '450‚ÇΩ', description: '–ö—Ä–µ–≤–µ—Ç–∫–∏ –≤ —Ö—Ä—É—Å—Ç—è—â–µ–º –∫–ª—è—Ä–µ', image: 'üç§' }
  ],
  'rolls': [
    { name: '–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è', price: '380‚ÇΩ', description: '–õ–æ—Å–æ—Å—å, —Å–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä, –æ–≥—É—Ä–µ—Ü', image: 'üç£' },
    { name: '–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è', price: '350‚ÇΩ', description: '–ö—Ä–∞–±, –∞–≤–æ–∫–∞–¥–æ, –æ–≥—É—Ä–µ—Ü, –∏–∫—Ä–∞ —Ç–æ–±–∏–∫–æ', image: 'üç±' },
    { name: '–î—Ä–∞–∫–æ–Ω', price: '420‚ÇΩ', description: '–£–≥–æ—Ä—å, –∞–≤–æ–∫–∞–¥–æ, –æ–≥—É—Ä–µ—Ü, —Å–æ—É—Å —É–Ω–∞–≥–∏', image: 'üêâ' }
  ],
  'pizza': [
    { name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', price: '480‚ÇΩ', description: '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–∞–∑–∏–ª–∏–∫', image: 'üçï' },
    { name: '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', price: '550‚ÇΩ', description: '–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏', image: 'üçï' },
    { name: '–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞', price: '620‚ÇΩ', description: '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–∞—Ä–º–µ–∑–∞–Ω, –≥–æ—Ä–≥–æ–Ω–∑–æ–ª–∞, —á–µ–¥–¥–µ—Ä', image: 'üßÄ' }
  ],
  'soups': [
    { name: '–¢–æ–º —è–º', price: '320‚ÇΩ', description: '–û—Å—Ç—Ä—ã–π —Ç–∞–π—Å–∫–∏–π —Å—É–ø —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏', image: 'üçú' },
    { name: '–ë–æ—Ä—â —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π', price: '280‚ÇΩ', description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ä—â —Å–æ —Å–º–µ—Ç–∞–Ω–æ–π', image: 'ü•£' },
    { name: '–ö—Ä–µ–º-—Å—É–ø –∏–∑ —Ç—ã–∫–≤—ã', price: '250‚ÇΩ', description: '–ù–µ–∂–Ω—ã–π —Å—É–ø-–ø—é—Ä–µ —Å —Ç—ã–∫–≤–µ–Ω–Ω—ã–º–∏ —Å–µ–º–µ—á–∫–∞–º–∏', image: 'üéÉ' }
  ],
  'salads': [
    { name: '–¶–µ–∑–∞—Ä—å —Å –∫—É—Ä–∏—Ü–µ–π', price: '380‚ÇΩ', description: '–°–∞–ª–∞—Ç —Ä–æ–º–∞–Ω–æ, –∫—É—Ä–∏—Ü–∞, –ø–∞—Ä–º–µ–∑–∞–Ω, —Å–æ—É—Å —Ü–µ–∑–∞—Ä—å', image: 'ü•ó' },
    { name: '–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç', price: '320‚ÇΩ', description: '–¢–æ–º–∞—Ç—ã, –æ–≥—É—Ä—Ü—ã, —Ñ–µ—Ç–∞, –æ–ª–∏–≤–∫–∏, –æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ', image: 'ü´í' },
    { name: '–°–∞–ª–∞—Ç —Å –ª–æ—Å–æ—Å–µ–º', price: '450‚ÇΩ', description: '–ú–∏–∫—Å —Å–∞–ª–∞—Ç–æ–≤, —Å–ª–∞–±–æ—Å–æ–ª–µ–Ω—ã–π –ª–æ—Å–æ—Å—å, –∞–≤–æ–∫–∞–¥–æ', image: 'üêü' }
  ],
  'wok': [
    { name: '–í–æ–∫ —Å –∫—É—Ä–∏—Ü–µ–π —Ç–µ—Ä–∏—è–∫–∏', price: '420‚ÇΩ', description: '–ö—É—Ä–∏—Ü–∞, –æ–≤–æ—â–∏, –ª–∞–ø—à–∞ —É–¥–æ–Ω, —Å–æ—É—Å —Ç–µ—Ä–∏—è–∫–∏', image: 'üçú' },
    { name: '–í–æ–∫ —Å –≥–æ–≤—è–¥–∏–Ω–æ–π', price: '480‚ÇΩ', description: '–ì–æ–≤—è–¥–∏–Ω–∞, –±–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü, —Å–æ–µ–≤—ã–π —Å–æ—É—Å', image: 'ü•©' },
    { name: '–û–≤–æ—â–Ω–æ–π –≤–æ–∫', price: '350‚ÇΩ', description: '–ú–∏–∫—Å –æ–≤–æ—â–µ–π, —Ç–æ—Ñ—É, –∫—É–Ω–∂—É—Ç–Ω–æ–µ –º–∞—Å–ª–æ', image: 'ü•¨' }
  ],
  'desserts': [
    { name: '–¢–∏—Ä–∞–º–∏—Å—É', price: '280‚ÇΩ', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç', image: 'üç∞' },
    { name: '–ß–∏–∑–∫–µ–π–∫ –ù—å—é-–ô–æ—Ä–∫', price: '320‚ÇΩ', description: '–ù–µ–∂–Ω—ã–π —Å—ã—Ä–Ω—ã–π —Ç–æ—Ä—Ç —Å —è–≥–æ–¥–Ω—ã–º —Å–æ—É—Å–æ–º', image: 'üç∞' },
    { name: '–ú–æ—Ä–æ–∂–µ–Ω–æ–µ', price: '180‚ÇΩ', description: '–¢—Ä–∏ —à–∞—Ä–∏–∫–∞ –Ω–∞ –≤—ã–±–æ—Ä —Å —Ç–æ–ø–ø–∏–Ω–≥–∞–º–∏', image: 'üç®' }
  ]
};

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
function displayMenu(category) {
  const menuContainer = document.getElementById('menu-items');
  const items = menuData[category];
  
  menuContainer.innerHTML = '';
  
  const fragment = document.createDocumentFragment();
  
  items.forEach((item, index) => {
    const menuItem = document.createElement('div');
    menuItem.className = 'menu-item';
    menuItem.style.animationDelay = (index * 0.05) + 's';
    menuItem.innerHTML = `
      <div class="item-image">${item.image}</div>
      <div class="item-content">
        <h3>${item.name}</h3>
        <p>${item.description}</p>
        <div class="item-price">${item.price}</div>
      </div>
      <button class="add-btn" onclick="addToCart('${item.name}', '${item.price}')">–î–æ–±–∞–≤–∏—Ç—å</button>
    `;
    fragment.appendChild(menuItem);
  });
  
  menuContainer.appendChild(fragment);
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É —Å –∫—Ä–∞—Å–∏–≤—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
function addToCart(name, price) {
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  const notification = document.createElement('div');
  notification.style.cssText = `
    position: fixed;
    top: 100px;
    right: 20px;
    background: linear-gradient(45deg, #28a745, #20c997);
    color: white;
    padding: 15px 25px;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(40, 167, 69, 0.3);
    z-index: 10000;
    transform: translate3d(400px, 0, 0);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    font-weight: 500;
    will-change: transform;
  `;
  notification.innerHTML = `‚úÖ ${name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`;
  
  document.body.appendChild(notification);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  requestAnimationFrame(() => {
    setTimeout(() => {
      notification.style.transform = 'translate3d(0, 0, 0)';
    }, 50);
  });
  
  // –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.style.transform = 'translate3d(400px, 0, 0)';
    setTimeout(() => {
      if (notification.parentNode) {
        document.body.removeChild(notification);
      }
    }, 300);
  }, 2500);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
document.addEventListener('DOMContentLoaded', function() {
  const categoryButtons = document.querySelectorAll('.category-btn');
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  displayMenu('business-lunch');
  
  categoryButtons.forEach(button => {
    button.addEventListener('click', function() {
      if (this.classList.contains('active')) return;
      
      // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
      categoryButtons.forEach(btn => btn.classList.remove('active'));
      
      // –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
      this.classList.add('active');
      
      // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –º–µ–Ω—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
      const menuContainer = document.getElementById('menu-items');
      menuContainer.style.opacity = '0';
      menuContainer.style.transform = 'translate3d(0, 20px, 0)';
      
      requestAnimationFrame(() => {
        setTimeout(() => {
          const category = this.getAttribute('data-category');
          displayMenu(category);
          requestAnimationFrame(() => {
            menuContainer.style.opacity = '1';
            menuContainer.style.transform = 'translate3d(0, 0, 0)';
          });
        }, 100);
      });
    });
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
  createParticles();
});

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–≤–∞—é—â–∏—Ö —á–∞—Å—Ç–∏—Ü
function createParticles() {
  const particlesContainer = document.createElement('div');
  particlesContainer.className = 'particles';
  document.body.appendChild(particlesContainer);

  for (let i = 0; i < 30; i++) {
    const particle = document.createElement('div');
    particle.className = 'particle';
    particle.style.left = Math.random() * 100 + '%';
    particle.style.width = particle.style.height = Math.random() * 4 + 2 + 'px';
    particle.style.animationDelay = Math.random() * 15 + 's';
    particle.style.animationDuration = (Math.random() * 10 + 15) + 's';
    particlesContainer.appendChild(particle);
  }
}

// –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —à–∞–ø–∫–∏
function handleScroll() {
  const header = document.querySelector('.header');
  if (window.scrollY > 100) {
    header.classList.add('scrolled');
  } else {
    header.classList.remove('scrolled');
  }
}

// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      target.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    }
  });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
window.addEventListener('scroll', handleScroll);
window.addEventListener('load', createParticles);